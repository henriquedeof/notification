server:
    port: 8084
    servlet:
        context-path: '/dl-notification/'

spring:
    application:
        name: dl-notification-service
    config:
        # The 'configserver:' is used to tell the application to look for the configurations in the Config Server.
        # The 'optional' prefix is used to tell the application that if the Config Server is not available, it should use the configurations in this application.yaml file (need to uncomment them).
#        import:  'optional:configserver:'
         import: 'configserver:'
    cloud:
        config:
            discovery:
                serviceId: dl-config-server
    datasource:
        url:  jdbc:postgresql://localhost:5432/dl-notification-v2
        username: postgres
        password: root
    jpa:
        hibernate:
            ddl-auto: update
            dialect: org.hibernate.dialect.PostgreSQLDialect
            jdbc:
                lob.non-contextual-creation: true
        properties:
            hibernate:
                show_sql: true
    output:
        ansi:
            enabled: Always
    rabbitmq:
        addresses: amqps://dsvvfanu:4FhHf07AACm8Gv1-SoWH337wGN6zGi1P@possum.lmq.cloudamqp.com/dsvvfanu

logging:
    level:
        com.xpto.distancelearning: TRACE
        org.springframework.core.env: DEBUG
        root: INFO
        org.springframework.web: DEBUG
        org.hibernate: INFO

dl:
    broker:
        exchange:
            notificationCommandExchange: dl.notificationcommand
        queue:
            notificationCommandQueue:
                name: dl.notificationcommand.ms.notification
        key:
            notificationCommandKey: ms.notification

management:
    endpoints:
        web:
            exposure:
                include:
                    - refresh
                    - health

eureka:
    client:
        serviceUrl:
            defaultZone: 'http://localhost:8761/eureka'
    instance:
        hostname: localhost
